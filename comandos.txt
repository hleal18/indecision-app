Instalar live-server desde npm:
npm install -g liver-server
Iniciar live-server:
live-server public
Instalar babel:
npm install -g babel-cli@6.24.1
Iniciar babel con presets:
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch

Se desinstalan las dependencias globales debido a las graves implicaciones que conlleva.
1. No se enlistan en el package.json (ejemplo: babel cli y live-server)
lo cual dificulta la colaboración.
2. Si se tuvieran más proyectos que usan React, implicaría que todos ellos tienen que usar
las mismas versiones que fueron instaladas, lo cual no es correcto.

Se procede a desinstalar las mencionadas del ambiente global.
-- yarn global remove babel-cli live-server

Se instalan ahora localmente.
npm install babel-cli@6.24.1 live-server

Tener en cuenta que ahora no son accesibles desde el cmd. Comandos como babel... y live-server...
ya no estan disponibles.
Se definen scripts en el package.json

Se instala webpack localmente
-- yarn add webpack@3.1.0
Se requiere proveer un archivo de configuración.

Webpack se encarga de realizar el trabajo que hacía babel.
Se configura scripts para el webpack y un archivo config.

Se instala como ejemplo el modulo validator por npm. version 8.0.0
Se accede a él importandolo en app.js como:
import validator from 'validator';
es suficiente con poner el nombre ya que se sabe que buscará
un módulo instalado.

Luego se instala React por medio del npm.
Se instala también ReactDOM por medio del npm.
npm install react@16.0.0 react-dom@16.0.0
